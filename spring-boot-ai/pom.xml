<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.4.5</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.anup</groupId>
	<artifactId>spring-boot-ai</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>spring-boot-ai</name>
	<description>Demo project for Spring Boot</description>
	<url />
	<licenses>
		<license />
	</licenses>
	<developers>
		<developer />
	</developers>
	<scm>
		<connection />
		<developerConnection />
		<tag />
		<url />
	</scm>
	<properties>
		<java.version>17</java.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- LangChain4j has an "Easy RAG" feature that makes it as easy as possible to get started
		with RAG -->
		<dependency>
			<groupId>dev.langchain4j</groupId>
			<artifactId>langchain4j-easy-rag</artifactId>
			<version>1.0.0-beta3</version>
		</dependency>

		<!-- Enables integration with Ollama for local LLM hosting -->
		<dependency>
			<groupId>dev.langchain4j</groupId>
			<artifactId>langchain4j-ollama</artifactId>
			<version>1.0.0-beta3</version>
		</dependency>

		<!-- LangChain4j integrates seamlessly with PGVector, allowing developers to store and query
		vector embeddings directly in PostgreSQL -->
		<dependency>
			<groupId>dev.langchain4j</groupId>
			<artifactId>langchain4j-pgvector</artifactId>
			<version>1.0.0-beta3</version>
		</dependency>

		<!-- To auto start the docker-compose when running the app -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-docker-compose</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>

		<!-- LangChain4j provides a Spring Boot starter for auto-configuring AI Services, RAG, Tools
		etc. -->
		<dependency>
			<groupId>dev.langchain4j</groupId>
			<artifactId>langchain4j-spring-boot-starter</artifactId>
			<version>1.0.0-beta3</version>
		</dependency>

		<!-- The AI Service can stream response token-by-token when using the Flux<String>. For
		this, please import langchain4j-reactor module -->
		<dependency>
			<groupId>dev.langchain4j</groupId>
			<artifactId>langchain4j-reactor</artifactId>
			<version>1.0.0-beta3</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>